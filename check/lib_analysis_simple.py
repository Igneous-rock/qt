import ogr,gdal,osrimport os,csvimport geo_shape as GSimport math,time#----------------------------------------------------------------------- singledef shapefile_analysis(f_ref,f_rst,nm_ref,dic_ui_wopr):	p_analysis = '../txt_analysis/'	nm_wi = os.path.split(f_rst)[-1].split('_')[-1][:-4]	nm_data = [nm_ref,nm_wi]		dic_ui_m__ref = gen_dic_ui_metrics(f_ref)	dic_ui_m__rst = gen_dic_ui_metrics(f_rst)		ref_rst = GS.geo_shape.open(f_rst)	lyr_rst = ref_rst.get_layer(0)	dic_ui_other,lst_fields = lyr_rst.dic_all_fields('Code_uniq',lst_exclude=['Perimeter','Area'])		#---- combine all the metrics	lst_metrics = ['Area']	dic_ui_info,header = combine_metrics(dic_ui_m__ref,dic_ui_m__rst,lst_metrics,dic_ui_other,lst_fields,dic_ui_wopr)			write_csv(dic_ui_info,header,p_analysis,nm_data)	analysis_count_by_interest(dic_ui_info,header)	#-------------------------------------------------------------------------------------------def analysis_count_by_interest(dic_ui_info,header):	p_interest = 0.1	n_head = len(header)	dic_i_h = {}	dic_h_i = {}	for i in range(n_head):		dic_i_h[i] = header[i]		dic_h_i[header[i]] = i		_wt,_we = 0,0	_ot,_oe = 0,0	ks = dic_ui_info.keys()	ks.sort()	for k in ks:		abs_area = dic_ui_info[k][dic_h_i['Area_abs']]		_wo = dic_ui_info[k][dic_h_i['wo']]				if _wo == 'within':			_wt = _wt + 1			if abs_area > p_interest: _we = _we + 1		else:			_ot = _ot + 1			if abs_area > p_interest: _oe = _oe + 1				#s_ew = '{:%}'.format(float(_we) / _wt)	print '                    n_error  n_total  percent'	print 'error of within  :','{:8d}'.format(_we),'{:8d}'.format(_wt),'{:6.1%}'.format(float(_we) / _wt)	print 'error of overlaps:','{:8d}'.format(_oe),'{:8d}'.format(_ot),'{:6.1%}'.format(float(_oe) / _ot)	print 'error of all     :','{:8d}'.format(_we+_oe),'{:8d}'.format(_wt+_ot),'{:6.1%}'.format(float(_we+_oe) / (_wt+_ot))				#-------------------------------------------------------------------------------------------def write_csv(dic_ui_info,header,p_analysis,nm_data):	nm_ref,nm_wi = nm_data	f_csv = p_analysis + nm_ref + '_' + nm_wi +'_info.csv'	writer = csv.writer(file(f_csv, 'wb'))		writer.writerow(header)	ks = dic_ui_info.keys()	ks.sort()	for k in ks:		writer.writerow(dic_ui_info[k])				def combine_metrics(dic_ui_m__ref,dic_ui_m__rst,lst_metrics,dic_ui_other,lst_fields,dic_ui_wopr):	import math	dic_ui_info = {}		ks = dic_ui_other.keys()	ks.sort()	for k in ks:		line = dic_ui_other[k]		for m in lst_metrics:			r_ref = dic_ui_m__ref[k][m]			r_rst = dic_ui_m__rst[k][m]			r_diff = (r_rst - r_ref) / r_ref			r_abs = math.fabs(r_diff)			line.extend([r_ref,r_rst,r_diff,r_abs])			if dic_ui_wopr <> {}:				line.append( dic_ui_wopr[k][0] )		dic_ui_info[k] = line		lst_suffix = ['_ref','_rst','_diff','_abs']	for m in lst_metrics:		header = lst_fields + [m + suffix for suffix in lst_suffix]		if dic_ui_wopr <> {}: header.append( 'wo' )	return dic_ui_info,header#----------------------------------------------------------------------------------	def sub__get_rectangle(geom):	env = geom.GetEnvelope()	r_area_rect = float((env[1] - env[0])) * (env[3] - env[2]) / 1000000.0	return r_area_rect	def gen_dic_ui_metrics(f_rst):	ref_rst = GS.geo_shape.open(f_rst)	lyr_rst = ref_rst.get_layer(0)		lst_metrics = ['Area','Perimeter','Thickness','inCompacity']	dic_code_metrics = {}	n_ft_m = lyr_rst.layer.GetFeatureCount()	for i in xrange(n_ft_m):		dic_temp = {}		ft_rst = lyr_rst.layer.GetFeature(i)		s_code_u = ft_rst.GetField('Code_uniq')		geom_rst = ft_rst.GetGeometryRef()				r_area = geom_rst.Area() / 1000000.0		r_perimeter = geom_rst.Boundary().Length() / 1000.0				r_thickness = (4 * math.pi * r_area) / (r_perimeter**2)				r_area_rect = sub__get_rectangle(geom_rst)				r_in_compacity = r_area / r_area_rect				lst_temp = [r_area,r_perimeter,r_thickness,r_in_compacity]		for j in range(len(lst_metrics)):			dic_temp[lst_metrics[j]] = lst_temp[j]		dic_code_metrics[s_code_u] = dic_temp	return dic_code_metrics		