def del_file(f_data):	if not os.path.isfile(f_data):		return	cmd_del = 'rm ' + f_data	_rs = lib_IO.run_exe(cmd_del)	print cmd_deldef change_filename(f_old,f_new):	if not os.path.isfile(f_old):		print f_old,' not exist'		return	cmd_rename = 'mv ' + f_old + ' '+ f_new	_rs = lib_IO.run_exe(cmd_rename)	print cmd_renamedef get_ps_out_scene(p_out):	ls_pr = lib_IO.getDirList( p_out ,'p...r...')	f_csv = 'data_time.csv'	writer = csv.writer(file(f_csv, 'wb'))	writer.writerow(['pathrow','year','month'])		ls_s_pr_ym = []	for pr in ls_pr:		p_pr = p_out + pr		name_scene = lib_IO.getDirList(p_pr ,'L.*')[0]		sensor,pr,ymd = name_scene.split('_')		#sensor = G_dic_sensor[snr]		pathrow = pr[1:4] + pr[-3:]		year,month = ymd[:4],ymd[4:6]		writer.writerow( [pathrow,year,month])		p_out_scene = p_pr + '/' + name_scene		#f_old = p_out_scene + '/ws_filled.img'		#f_new = p_out_scene + '/fill_mndwi.img'		#change_filename(f_old,f_new)		f_old = p_out_scene + '/ws_mndwi_proj.img'		del_file(f_old)		#ps_out_scene.append(p_out_scene)					returndef check_data_info(p_in,p_out):	get_ps_out_scene(p_out)	import time,sys,osimport lib_IOimport lib_Global_constimport geo_shape as GSimport csvif __name__ == '__main__':	a = time.clock()	check_data_info(lib_Global_const.G_path_in, lib_Global_const.G_path_out)	print time.clock() -a	print 'done'