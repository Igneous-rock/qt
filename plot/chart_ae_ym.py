def csv_2_dic(f_csv,str_head):	dic_info = {}	reader=csv.reader(open(f_csv, 'rb'))	head = reader.next()	n_head = len(head)	global G_dic_ki_vhead	for i in range(n_head):		G_dic_ki_vhead[i] = head[i]			global G_dic_khead_vi	G_dic_khead_vi = {v:k for k, v in G_dic_ki_vhead.items()}	i_h = G_dic_khead_vi[str_head]	for item in reader:		k = item[i_h]		if not k in dic_info:			dic_info[k] = [float(item[G_dic_khead_vi['e_mndwi_Area']])]		else:			dic_info[k].append(float(item[G_dic_khead_vi['e_mndwi_Area']]))	return dic_info			def write_csv(dic_count,str_head):	f_csv = 'error_area_'+ str_head +'.csv'	writer = csv.writer(file(f_csv, 'wb'))		writer.writerow([str_head,'total','num(error>0.1)','percent'])	ks = dic_count.keys()	ks.sort()	for k in ks:		n_error = dic_count[k][1]		total = dic_count[k][0] + n_error		r_p = float(n_error) / float(total)		writer.writerow([k,str(total),str(n_error),format(r_p, '.2%')])		def info_2_count(dic_info):	dic_count = {}	ks = dic_info.keys()	for k in ks:		dic_count[k] = [0,0]		for area in dic_info[k]:			if area < 0.1:				dic_count[k][0] += 1			else:				dic_count[k][1] += 1	return dic_countdef chart_box_plot():	f_csv = 'araeGT1_combo.csv'#'qt2000_ae_ymd.csv'		dic_m_info = csv_2_dic(f_csv,'month')	dic_m_count = info_2_count(dic_m_info)	write_csv(dic_m_count,'month')	dic_y_info = csv_2_dic(f_csv,'year')	dic_y_count = info_2_count(dic_y_info)	write_csv(dic_y_count,'year')		dic_p_info = csv_2_dic(f_csv,'path')	dic_p_count = info_2_count(dic_p_info)	write_csv(dic_p_count,'path')		dic_y_info = csv_2_dic(f_csv,'row')	dic_y_count = info_2_count(dic_y_info)	write_csv(dic_y_count,'row')		dic_y_info = csv_2_dic(f_csv,'PathRow')	dic_y_count = info_2_count(dic_y_info)	write_csv(dic_y_count,'PathRow')import os,sys,csvimport numpy as npimport timeG_dic_ki_vhead = {}G_dic_khead_vi = {}#--------------------------------------------------------------if __name__ == '__main__':	a = time.clock()	chart_box_plot()	print time.clock() -a	print 'done'